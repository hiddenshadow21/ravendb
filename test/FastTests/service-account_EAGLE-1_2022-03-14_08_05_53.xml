<?xml version="1.0" encoding="utf-8"?>
<testsuites>
  <testsuite name="StressTests.Client.Attachments.BulkInsertAttachmentsStress" hostname="EAGLE-1" package="not available" id="0" tests="2" failures="0" errors="0" skipped="2" time="0.002" timestamp="2022-03-14T07:06:12">
    <properties />
    <testcase name="StressTests.Client.Attachments.BulkInsertAttachmentsStress.StoreManyAttachmentsStress" classname="StressTests.Client.Attachments.BulkInsertAttachmentsStress" time="0.001">
      <skipped />
      <system-out>Test can be run only on 'All' (AllX64)</system-out>
    </testcase>
    <testcase name="StressTests.Client.Attachments.BulkInsertAttachmentsStress.StoreManyAttachmentsAndDocsStress" classname="StressTests.Client.Attachments.BulkInsertAttachmentsStress" time="0.001">
      <skipped />
      <system-out>Test can be run only on 'All' (AllX64)</system-out>
    </testcase>
    <system-out>Test can be run only on 'All' (AllX64)
Test can be run only on 'All' (AllX64)</system-out>
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Client.Attachments.AttachmentsSessionStress" hostname="EAGLE-1" package="not available" id="1" tests="8" failures="0" errors="0" skipped="2" time="5.892" timestamp="2022-03-14T07:37:04">
    <properties />
    <testcase name="StressTests.Client.Attachments.AttachmentsSessionStress.PutLotOfAttachments(count: 10000)" classname="StressTests.Client.Attachments.AttachmentsSessionStress" time="1.370" status="1" />
    <testcase name="StressTests.Client.Attachments.AttachmentsSessionStress.StressPutLotOfAttachmentsAsync32(count: 10000)" classname="StressTests.Client.Attachments.AttachmentsSessionStress" time="1.399" status="1" />
    <testcase name="StressTests.Client.Attachments.AttachmentsSessionStress.StressPutLotOfAttachmentsAsync" classname="StressTests.Client.Attachments.AttachmentsSessionStress" time="0.001">
      <skipped />
      <system-out>Test can be run only on 'All' (AllX64)</system-out>
    </testcase>
    <testcase name="StressTests.Client.Attachments.AttachmentsSessionStress.StressPutLotOfAttachments" classname="StressTests.Client.Attachments.AttachmentsSessionStress" time="0.001">
      <skipped />
      <system-out>Test can be run only on 'All' (AllX64)</system-out>
    </testcase>
    <testcase name="StressTests.Client.Attachments.AttachmentsSessionStress.PutLotOfAttachmentsAsync(count: 1000)" classname="StressTests.Client.Attachments.AttachmentsSessionStress" time="0.202" status="1" />
    <testcase name="StressTests.Client.Attachments.AttachmentsSessionStress.StressPutLotOfAttachments32(count: 10000)" classname="StressTests.Client.Attachments.AttachmentsSessionStress" time="1.368" status="1" />
    <testcase name="StressTests.Client.Attachments.AttachmentsSessionStress.PutLotOfAttachments(count: 1000)" classname="StressTests.Client.Attachments.AttachmentsSessionStress" time="0.193" status="1" />
    <testcase name="StressTests.Client.Attachments.AttachmentsSessionStress.PutLotOfAttachmentsAsync(count: 10000)" classname="StressTests.Client.Attachments.AttachmentsSessionStress" time="1.358" status="1" />
    <system-out>Test can be run only on 'All' (AllX64)
Test can be run only on 'All' (AllX64)</system-out>
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Rachis.SubscriptionsFailoverStress" hostname="EAGLE-1" package="not available" id="2" tests="4" failures="0" errors="0" skipped="0" time="180.923" timestamp="2022-03-14T08:21:19">
    <properties />
    <testcase name="StressTests.Rachis.SubscriptionsFailoverStress.SubscriptionFailoverWhileModifying" classname="StressTests.Rachis.SubscriptionsFailoverStress" time="119.661" status="1" />
    <testcase name="StressTests.Rachis.SubscriptionsFailoverStress.SubscriptionShouldNotFailIfLeaderIsDownButItStillHasEnoughTimeToRetry" classname="StressTests.Rachis.SubscriptionsFailoverStress" time="19.875" status="1" />
    <testcase name="StressTests.Rachis.SubscriptionsFailoverStress.SubscriptionShouldFailIfLeaderIsDownAndItIsOnlyOpening" classname="StressTests.Rachis.SubscriptionsFailoverStress" time="21.340" status="1" />
    <testcase name="StressTests.Rachis.SubscriptionsFailoverStress.SubscriptionShouldFailIfLeaderIsDownBeforeAck" classname="StressTests.Rachis.SubscriptionsFailoverStress" time="20.046" status="1" />
    <system-out />
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Issues.RavenDB_12151" hostname="EAGLE-1" package="not available" id="3" tests="7" failures="0" errors="0" skipped="3" time="11.488" timestamp="2022-03-14T07:08:06">
    <properties />
    <testcase name="StressTests.Issues.RavenDB_12151.IndexingWhenTransactionSizeLimitExceeded32" classname="StressTests.Issues.RavenDB_12151" time="2.066" status="1" />
    <testcase name="StressTests.Issues.RavenDB_12151.IndexingWhenScratchSpaceLimitExceeded" classname="StressTests.Issues.RavenDB_12151" time="0.001">
      <skipped />
      <system-out>Test can be run only on 'All' (AllX64)</system-out>
    </testcase>
    <testcase name="StressTests.Issues.RavenDB_12151.IndexingWhenScratchSpaceLimitExceeded32" classname="StressTests.Issues.RavenDB_12151" time="2.717" status="1" />
    <testcase name="StressTests.Issues.RavenDB_12151.IndexingWhenTransactionSizeLimitExceeded" classname="StressTests.Issues.RavenDB_12151" time="0.001">
      <skipped />
      <system-out>Test can be run only on 'All' (AllX64)</system-out>
    </testcase>
    <testcase name="StressTests.Issues.RavenDB_12151.IndexingWhenGlobalScratchSpaceLimitExceeded32" classname="StressTests.Issues.RavenDB_12151" time="2.731" status="1" />
    <testcase name="StressTests.Issues.RavenDB_12151.IndexingWhenGlobalScratchSpaceLimitExceeded" classname="StressTests.Issues.RavenDB_12151" time="0.001">
      <skipped />
      <system-out>Test can be run only on 'All' (AllX64)</system-out>
    </testcase>
    <testcase name="StressTests.Issues.RavenDB_12151.IndexingWhenEncryptedTransactionSizeLimitLimitExceeded" classname="StressTests.Issues.RavenDB_12151" time="3.970" status="1" />
    <system-out>Test can be run only on 'All' (AllX64)
Test can be run only on 'All' (AllX64)
Test can be run only on 'All' (AllX64)</system-out>
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Server.Documents.PeriodicBackup.RetentionStress" hostname="EAGLE-1" package="not available" id="4" tests="18" failures="0" errors="0" skipped="0" time="751.768" timestamp="2022-03-14T08:47:25">
    <properties />
    <testcase name="StressTests.Server.Documents.PeriodicBackup.RetentionStress.can_delete_backups_by_date(backupAgeInSeconds: 50, numberOfBackupsToCreate: 50, checkIncremental: False, suffix: null)" classname="StressTests.Server.Documents.PeriodicBackup.RetentionStress" time="65.476" status="1" />
    <testcase name="StressTests.Server.Documents.PeriodicBackup.RetentionStress.can_delete_backups_by_date(backupAgeInSeconds: 30, numberOfBackupsToCreate: 3, checkIncremental: False, suffix: null)" classname="StressTests.Server.Documents.PeriodicBackup.RetentionStress" time="35.197" status="1" />
    <testcase name="StressTests.Server.Documents.PeriodicBackup.RetentionStress.can_delete_backups_by_date(backupAgeInSeconds: 30, numberOfBackupsToCreate: 3, checkIncremental: True, suffix: null)" classname="StressTests.Server.Documents.PeriodicBackup.RetentionStress" time="35.105" status="1" />
    <testcase name="StressTests.Server.Documents.PeriodicBackup.RetentionStress.can_delete_backups_by_date(backupAgeInSeconds: 70, numberOfBackupsToCreate: 13, checkIncremental: True, suffix: null)" classname="StressTests.Server.Documents.PeriodicBackup.RetentionStress" time="78.045" status="1" />
    <testcase name="StressTests.Server.Documents.PeriodicBackup.RetentionStress.can_delete_backups_by_date(backupAgeInSeconds: 20, numberOfBackupsToCreate: 20, checkIncremental: False, suffix: null)" classname="StressTests.Server.Documents.PeriodicBackup.RetentionStress" time="29.193" status="1" />
    <testcase name="StressTests.Server.Documents.PeriodicBackup.RetentionStress.can_delete_backups_by_date(backupAgeInSeconds: 7, numberOfBackupsToCreate: 3, checkIncremental: False, suffix: &quot;\\E\\G\\O\\R\\..\\..\\..\\..&quot;)" classname="StressTests.Server.Documents.PeriodicBackup.RetentionStress" time="12.388" status="1" />
    <testcase name="StressTests.Server.Documents.PeriodicBackup.RetentionStress.can_delete_backups_by_date(backupAgeInSeconds: 70, numberOfBackupsToCreate: 13, checkIncremental: False, suffix: null)" classname="StressTests.Server.Documents.PeriodicBackup.RetentionStress" time="77.637" status="1" />
    <testcase name="StressTests.Server.Documents.PeriodicBackup.RetentionStress.can_delete_backups_by_date(backupAgeInSeconds: 50, numberOfBackupsToCreate: 50, checkIncremental: True, suffix: null)" classname="StressTests.Server.Documents.PeriodicBackup.RetentionStress" time="65.697" status="1" />
    <testcase name="StressTests.Server.Documents.PeriodicBackup.RetentionStress.can_delete_backups_by_date(backupAgeInSeconds: 20, numberOfBackupsToCreate: 5, checkIncremental: True, suffix: null)" classname="StressTests.Server.Documents.PeriodicBackup.RetentionStress" time="25.748" status="1" />
    <testcase name="StressTests.Server.Documents.PeriodicBackup.RetentionStress.can_delete_backups_by_date(backupAgeInSeconds: 25, numberOfBackupsToCreate: 10, checkIncremental: False, suffix: null)" classname="StressTests.Server.Documents.PeriodicBackup.RetentionStress" time="31.876" status="1" />
    <testcase name="StressTests.Server.Documents.PeriodicBackup.RetentionStress.can_delete_backups_by_date(backupAgeInSeconds: 20, numberOfBackupsToCreate: 5, checkIncremental: False, suffix: null)" classname="StressTests.Server.Documents.PeriodicBackup.RetentionStress" time="25.395" status="1" />
    <testcase name="StressTests.Server.Documents.PeriodicBackup.RetentionStress.can_delete_backups_by_date(backupAgeInSeconds: 40, numberOfBackupsToCreate: 20, checkIncremental: False, suffix: null)" classname="StressTests.Server.Documents.PeriodicBackup.RetentionStress" time="48.882" status="1" />
    <testcase name="StressTests.Server.Documents.PeriodicBackup.RetentionStress.can_delete_backups_by_date(backupAgeInSeconds: 40, numberOfBackupsToCreate: 20, checkIncremental: True, suffix: null)" classname="StressTests.Server.Documents.PeriodicBackup.RetentionStress" time="48.884" status="1" />
    <testcase name="StressTests.Server.Documents.PeriodicBackup.RetentionStress.can_delete_backups_by_date(backupAgeInSeconds: 7, numberOfBackupsToCreate: 3, checkIncremental: False, suffix: &quot;\\E/G\\../..\\O\\R/..\\..&quot;)" classname="StressTests.Server.Documents.PeriodicBackup.RetentionStress" time="11.937" status="1" />
    <testcase name="StressTests.Server.Documents.PeriodicBackup.RetentionStress.can_delete_backups_by_date(backupAgeInSeconds: 45, numberOfBackupsToCreate: 1, checkIncremental: False, suffix: null)" classname="StressTests.Server.Documents.PeriodicBackup.RetentionStress" time="49.614" status="1" />
    <testcase name="StressTests.Server.Documents.PeriodicBackup.RetentionStress.can_delete_backups_by_date(backupAgeInSeconds: 25, numberOfBackupsToCreate: 10, checkIncremental: True, suffix: null)" classname="StressTests.Server.Documents.PeriodicBackup.RetentionStress" time="31.910" status="1" />
    <testcase name="StressTests.Server.Documents.PeriodicBackup.RetentionStress.can_delete_backups_by_date(backupAgeInSeconds: 45, numberOfBackupsToCreate: 1, checkIncremental: True, suffix: null)" classname="StressTests.Server.Documents.PeriodicBackup.RetentionStress" time="49.773" status="1" />
    <testcase name="StressTests.Server.Documents.PeriodicBackup.RetentionStress.can_delete_backups_by_date(backupAgeInSeconds: 20, numberOfBackupsToCreate: 20, checkIncremental: True, suffix: null)" classname="StressTests.Server.Documents.PeriodicBackup.RetentionStress" time="29.011" status="1" />
    <system-out />
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Client.TimeSeries.Policies.TimeSeriesConfigurationTestsStress" hostname="EAGLE-1" package="not available" id="5" tests="2" failures="0" errors="0" skipped="0" time="238.865" timestamp="2022-03-14T07:36:05">
    <properties />
    <testcase name="StressTests.Client.TimeSeries.Policies.TimeSeriesConfigurationTestsStress.RapidRetentionAndRollup" classname="StressTests.Client.TimeSeries.Policies.TimeSeriesConfigurationTestsStress" time="86.576" status="1" />
    <testcase name="StressTests.Client.TimeSeries.Policies.TimeSeriesConfigurationTestsStress.RapidRetentionAndRollupInACluster" classname="StressTests.Client.TimeSeries.Policies.TimeSeriesConfigurationTestsStress" time="152.289" status="1" />
    <system-out />
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Sparrow.DisposeOnceTests" hostname="EAGLE-1" package="not available" id="6" tests="16" failures="0" errors="0" skipped="3" time="0.748" timestamp="2022-03-14T07:50:14">
    <properties />
    <testcase name="StressTests.Sparrow.DisposeOnceTests.SingleAttemptMultiThreadException" classname="StressTests.Sparrow.DisposeOnceTests" time="0.001">
      <skipped />
      <system-out>RavenDB-9904</system-out>
    </testcase>
    <testcase name="StressTests.Sparrow.DisposeOnceTests.WithRetrySingleThreadException(numRetries: 0)" classname="StressTests.Sparrow.DisposeOnceTests" time="0.000" status="1" />
    <testcase name="StressTests.Sparrow.DisposeOnceTests.WithRetrySingleThreadException(numRetries: 1)" classname="StressTests.Sparrow.DisposeOnceTests" time="0.000" status="1" />
    <testcase name="StressTests.Sparrow.DisposeOnceTests.SingleAttemptSingleThreadNoError" classname="StressTests.Sparrow.DisposeOnceTests" time="0.000" status="1" />
    <testcase name="StressTests.Sparrow.DisposeOnceTests.SingleAttemptMultiThreadNoErrors" classname="StressTests.Sparrow.DisposeOnceTests" time="0.001">
      <skipped />
      <system-out>RavenDB-9904</system-out>
    </testcase>
    <testcase name="StressTests.Sparrow.DisposeOnceTests.WithRetryMultiThreadNoErrors(numThreads: 2, numAttempts: 1000)" classname="StressTests.Sparrow.DisposeOnceTests" time="0.001" status="1" />
    <testcase name="StressTests.Sparrow.DisposeOnceTests.WithRetrySingleThreadNoError" classname="StressTests.Sparrow.DisposeOnceTests" time="0.000" status="1" />
    <testcase name="StressTests.Sparrow.DisposeOnceTests.WithRetryMultiThreadException" classname="StressTests.Sparrow.DisposeOnceTests" time="0.001">
      <skipped />
      <system-out>For this test to work, we need a multithreaded preemptive scheduler for the tasks.</system-out>
    </testcase>
    <testcase name="StressTests.Sparrow.DisposeOnceTests.WithRetrySingleThreadException(numRetries: 16)" classname="StressTests.Sparrow.DisposeOnceTests" time="0.001" status="1" />
    <testcase name="StressTests.Sparrow.DisposeOnceTests.WithRetryMultiThreadNoErrors(numThreads: 16, numAttempts: 1000000)" classname="StressTests.Sparrow.DisposeOnceTests" time="0.623" status="1" />
    <testcase name="StressTests.Sparrow.DisposeOnceTests.WithRetrySingleThreadException(numRetries: 4)" classname="StressTests.Sparrow.DisposeOnceTests" time="0.000" status="1" />
    <testcase name="StressTests.Sparrow.DisposeOnceTests.WithRetryMultiThreadNoErrors(numThreads: 4, numAttempts: 10000)" classname="StressTests.Sparrow.DisposeOnceTests" time="0.006" status="1" />
    <testcase name="StressTests.Sparrow.DisposeOnceTests.WithRetryMultiThreadNoErrors(numThreads: 8, numAttempts: 100000)" classname="StressTests.Sparrow.DisposeOnceTests" time="0.113" status="1" />
    <testcase name="StressTests.Sparrow.DisposeOnceTests.WithRetrySingleThreadException(numRetries: 2)" classname="StressTests.Sparrow.DisposeOnceTests" time="0.000" status="1" />
    <testcase name="StressTests.Sparrow.DisposeOnceTests.WithRetrySingleThreadException(numRetries: 8)" classname="StressTests.Sparrow.DisposeOnceTests" time="0.000" status="1" />
    <testcase name="StressTests.Sparrow.DisposeOnceTests.SingleAttemptSingleThreadException" classname="StressTests.Sparrow.DisposeOnceTests" time="0.001" status="1" />
    <system-out>RavenDB-9904
RavenDB-9904
For this test to work, we need a multithreaded preemptive scheduler for the tasks.</system-out>
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Issues.RavenDB_15080" hostname="EAGLE-1" package="not available" id="7" tests="10" failures="0" errors="0" skipped="0" time="20.000" timestamp="2022-03-14T07:32:06">
    <properties />
    <testcase name="StressTests.Issues.RavenDB_15080.ExportAndImportCountersShouldKeepOriginalCasing" classname="StressTests.Issues.RavenDB_15080" time="0.707" status="1" />
    <testcase name="StressTests.Issues.RavenDB_15080.CanSplitLowerCasedAndUpperCasedCounterNames" classname="StressTests.Issues.RavenDB_15080" time="0.300" status="1" />
    <testcase name="StressTests.Issues.RavenDB_15080.CanDeleteAndReInsertCounter" classname="StressTests.Issues.RavenDB_15080" time="0.121" status="1" />
    <testcase name="StressTests.Issues.RavenDB_15080.CountersSessionCacheShouldBeCaseInsensitiveToCounterName" classname="StressTests.Issues.RavenDB_15080" time="0.095" status="1" />
    <testcase name="StressTests.Issues.RavenDB_15080.CounterOperationsShouldBeCaseInsensitiveToCounterName" classname="StressTests.Issues.RavenDB_15080" time="0.070" status="1" />
    <testcase name="StressTests.Issues.RavenDB_15080.CountersShouldBeCaseInsensitive" classname="StressTests.Issues.RavenDB_15080" time="0.069" status="1" />
    <testcase name="StressTests.Issues.RavenDB_15080.GetCountersForDocumentShouldReturnNamesInTheirOriginalCasing" classname="StressTests.Issues.RavenDB_15080" time="0.058" status="1" />
    <testcase name="StressTests.Issues.RavenDB_15080.CanSplitAndReplicateRandomCounterName" classname="StressTests.Issues.RavenDB_15080" time="16.282" status="1" />
    <testcase name="StressTests.Issues.RavenDB_15080.SplitCounterShouldRemoveUnusedEntries" classname="StressTests.Issues.RavenDB_15080" time="2.205" status="1" />
    <testcase name="StressTests.Issues.RavenDB_15080.DeletedCounterShouldNotBePresentInMetadataCounters" classname="StressTests.Issues.RavenDB_15080" time="0.092" status="1" />
    <system-out />
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Client.Attachments.AttachmentsSessionAsyncStress" hostname="EAGLE-1" package="not available" id="8" tests="2" failures="0" errors="0" skipped="1" time="6.740" timestamp="2022-03-14T07:06:49">
    <properties />
    <testcase name="StressTests.Client.Attachments.AttachmentsSessionAsyncStress.PutLotOfAttachments" classname="StressTests.Client.Attachments.AttachmentsSessionAsyncStress" time="0.001">
      <skipped />
      <system-out>Test can be run only on 'All' (AllX64)</system-out>
    </testcase>
    <testcase name="StressTests.Client.Attachments.AttachmentsSessionAsyncStress.PutLotOfAttachments32(count: 50000)" classname="StressTests.Client.Attachments.AttachmentsSessionAsyncStress" time="6.739" status="1" />
    <system-out>Test can be run only on 'All' (AllX64)</system-out>
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Core.Expiration.ExpirationStressTest" hostname="EAGLE-1" package="not available" id="9" tests="2" failures="0" errors="0" skipped="0" time="33.162" timestamp="2022-03-14T07:16:21">
    <properties />
    <testcase name="StressTests.Core.Expiration.ExpirationStressTest.CanAddALotOfEntitiesWithSameExpiry_ThenReadItBeforeItExpires_ButWillNotBeAbleToReadItAfterExpiry(count: 1000)" classname="StressTests.Core.Expiration.ExpirationStressTest" time="3.011" status="1" />
    <testcase name="StressTests.Core.Expiration.ExpirationStressTest.CanAddALotOfEntitiesWithSameExpiry_ThenReadItBeforeItExpires_ButWillNotBeAbleToReadItAfterExpiry(count: 10000)" classname="StressTests.Core.Expiration.ExpirationStressTest" time="30.150" status="1" />
    <system-out />
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress" hostname="EAGLE-1" package="not available" id="10" tests="31" failures="0" errors="0" skipped="0" time="449.215" timestamp="2022-03-14T07:14:08">
    <properties />
    <testcase name="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress.RavenEtlWithTimeSeries_WhenRemoveWholeSegment_ShouldDestBeAsSrc(justForXUint: &quot;A4&quot;, collections: [&quot;Users&quot;], script: &quot;\r\nloadToUsers(this);\r\n\r\nfunction loadTimeSer&quot;...)" classname="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress" time="30.645" status="1" />
    <testcase name="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress.RavenEtlWithTimeSeries_WhenStoreDocumentAndTimeSeriesInSameSession_ShouldSrcBeAsDest(justForXUint: &quot;B0&quot;, shouldEtlTs: True, collections: [&quot;Users&quot;], script: &quot;\r\nvar user = loadToUsers(this);\r\nuser.addTimeS&quot;...)" classname="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress" time="1.194" status="1" />
    <testcase name="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress.RavenEtlWithTimeSeries_WhenRemoveWholeSegment_ShouldDestBeAsSrc(justForXUint: &quot;A3&quot;, collections: [&quot;Users&quot;], script: &quot;\r\nloadToUsers(this);\r\n\r\nfunction loadTimeSer&quot;...)" classname="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress" time="30.822" status="1" />
    <testcase name="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress.RavenEtlWithTimeSeries_WhenStoreDocumentAndTimeSeriesInSameSession_ShouldSrcBeAsDest(justForXUint: &quot;C3&quot;, shouldEtlTs: False, collections: [&quot;Users&quot;], script: &quot;\r\nloadToUsers(this);\r\n\r\nfunction loadTimeSer&quot;...)" classname="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress" time="16.350" status="1" />
    <testcase name="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress.RavenEtlWithTimeSeries_WhenStoreDocumentAndTimeSeriesInSameSession_ShouldSrcBeAsDest(justForXUint: &quot;C2&quot;, shouldEtlTs: False, collections: [&quot;Users&quot;], script: &quot;\r\nloadToUsers(this);\r\n\r\nfunction loadTimeSer&quot;...)" classname="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress" time="16.269" status="1" />
    <testcase name="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress.RavenEtlWithTimeSeries_WhenStoreDocumentAndTimeSeriesInSameSession_ShouldSrcBeAsDest(justForXUint: &quot;B1&quot;, shouldEtlTs: True, collections: [&quot;Users&quot;], script: &quot;\r\nvar user = loadToUsers(this);\r\nuser.addTimeS&quot;...)" classname="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress" time="1.118" status="1" />
    <testcase name="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress.RavenEtlWithTimeSeries_WhenStoreMultipleTimeSeriesOfDocThatHasEtagOfMultipleBatchAhead(justForXUint: &quot;B0&quot;, collections: [&quot;Users&quot;], script: &quot;\r\nvar user = loadToUsers(this);\r\nuser.addTimeS&quot;...)" classname="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress" time="14.026" status="1" />
    <testcase name="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress.RavenEtlWithTimeSeries_WhenStoreMultipleTimeSeriesOfDocThatHasEtagOfMultipleBatchAhead(justForXUint: &quot;B2&quot;, collections: [&quot;Users&quot;], script: &quot;\r\nvar user = loadToUsers(this);\r\nuser.addTimeS&quot;...)" classname="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress" time="16.156" status="1" />
    <testcase name="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress.RavenEtlWithTimeSeries_WhenStoreMultipleTimeSeriesOfDocThatHasEtagOfMultipleBatchAhead(justForXUint: &quot;A2&quot;, collections: [&quot;Users&quot;], script: &quot;\r\nloadToUsers(this);\r\n\r\nfunction loadTimeSer&quot;...)" classname="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress" time="16.368" status="1" />
    <testcase name="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress.RavenEtlWithTimeSeries_WhenStoreMultipleTimeSeriesOfDocThatHasEtagOfMultipleBatchAhead(justForXUint: &quot;B1&quot;, collections: [&quot;Users&quot;], script: &quot;\r\nvar user = loadToUsers(this);\r\nuser.addTimeS&quot;...)" classname="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress" time="15.055" status="1" />
    <testcase name="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress.RavenEtlWithTimeSeries_WhenStoreMultipleTimeSeriesOfDocThatHasEtagOfMultipleBatchAhead(justForXUint: &quot;A3&quot;, collections: [&quot;Users&quot;], script: &quot;\r\nloadToUsers(this);\r\n\r\nfunction loadTimeSer&quot;...)" classname="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress" time="15.575" status="1" />
    <testcase name="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress.RavenEtlWithTimeSeries_WhenStoreDocumentAndTimeSeriesInSameSession_ShouldSrcBeAsDest(justForXUint: &quot;A0&quot;, shouldEtlTs: True, collections: [], script: null)" classname="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress" time="1.124" status="1" />
    <testcase name="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress.RavenEtlWithTimeSeries_WhenStoreDocumentAndTimeSeriesInSameSession_ShouldSrcBeAsDest(justForXUint: &quot;C1&quot;, shouldEtlTs: False, collections: [&quot;Users&quot;], script: &quot;\r\nloadToUsers(this);\r\n\r\nfunction loadTimeSer&quot;...)" classname="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress" time="16.297" status="1" />
    <testcase name="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress.RavenEtlWithTimeSeries_WhenRemoveWholeSegment_ShouldDestBeAsSrc(justForXUint: &quot;A1&quot;, collections: [&quot;Users&quot;], script: &quot;\r\nloadToUsers(this);\r\n\r\nfunction loadTimeSer&quot;...)" classname="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress" time="30.723" status="1" />
    <testcase name="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress.RavenEtlWithTimeSeries_WhenRemoveWholeSegment_ShouldDestBeAsSrc(justForXUint: &quot;A5&quot;, collections: [&quot;Users&quot;], script: &quot;\r\nloadToUsers(this);\r\n\r\nfunction loadTimeSer&quot;...)" classname="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress" time="30.678" status="1" />
    <testcase name="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress.RavenEtlWithTimeSeries_WhenStoreDocumentAndTimeSeriesInSameSession_ShouldSrcBeAsDest(justForXUint: &quot;C0&quot;, shouldEtlTs: False, collections: [&quot;Users&quot;], script: &quot;\r\nloadToUsers(this);\r\n\r\nfunction loadTimeSer&quot;...)" classname="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress" time="16.268" status="1" />
    <testcase name="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress.RavenEtlWithTimeSeries_WhenRemoveWholeSegment_ShouldDestBeAsSrc(justForXUint: &quot;A0&quot;, collections: [], script: null)" classname="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress" time="29.657" status="1" />
    <testcase name="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress.RavenEtlWithTimeSeries_WhenStoreMultipleTimeSeriesOfDocThatHasEtagOfMultipleBatchAhead(justForXUint: &quot;A0&quot;, collections: [], script: null)" classname="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress" time="15.955" status="1" />
    <testcase name="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress.RavenEtlWithTimeSeries_WhenStoreDocumentAndTimeSeriesInSameSession_ShouldSrcBeAsDest(justForXUint: &quot;B2&quot;, shouldEtlTs: True, collections: [&quot;Users&quot;], script: &quot;\r\nvar user = loadToUsers(this);\r\nuser.addTimeS&quot;...)" classname="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress" time="1.145" status="1" />
    <testcase name="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress.RavenEtlWithTimeSeries_WhenRemoveWholeSegment_ShouldDestBeAsSrc(justForXUint: &quot;A6&quot;, collections: [&quot;Users&quot;], script: &quot;\r\nloadToUsers(this);\r\n\r\nfunction loadAllTime&quot;...)" classname="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress" time="30.776" status="1" />
    <testcase name="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress.RavenEtlWithTimeSeries_WhenStoreMultipleTimeSeriesOfDocThatHasEtagOfMultipleBatchAhead(justForXUint: &quot;A5&quot;, collections: [&quot;Users&quot;], script: &quot;\r\nloadToUsers(this);\r\n\r\nfunction loadTimeSer&quot;...)" classname="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress" time="16.390" status="1" />
    <testcase name="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress.RavenEtlWithTimeSeries_WhenStoreMultipleTimeSeriesOfDocThatHasEtagOfMultipleBatchAhead(justForXUint: &quot;A4&quot;, collections: [&quot;Users&quot;], script: &quot;\r\nloadToUsers(this);\r\n\r\nfunction loadTimeSer&quot;...)" classname="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress" time="15.710" status="1" />
    <testcase name="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress.RavenEtlWithTimeSeries_WhenStoreDocumentAndTimeSeriesInSameSession_ShouldSrcBeAsDest(justForXUint: &quot;A2&quot;, shouldEtlTs: True, collections: [&quot;Users&quot;], script: &quot;\r\nloadToUsers(this);\r\n\r\nfunction loadTimeSer&quot;...)" classname="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress" time="1.127" status="1" />
    <testcase name="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress.RavenEtlWithTimeSeries_WhenStoreDocumentAndTimeSeriesInSameSession_ShouldSrcBeAsDest(justForXUint: &quot;A6&quot;, shouldEtlTs: True, collections: [&quot;Users&quot;], script: &quot;\r\nloadToUsers(this);\r\n\r\nfunction loadAllTime&quot;...)" classname="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress" time="1.190" status="1" />
    <testcase name="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress.RavenEtlWithTimeSeries_WhenRemoveWholeSegment_ShouldDestBeAsSrc(justForXUint: &quot;A2&quot;, collections: [&quot;Users&quot;], script: &quot;\r\nloadToUsers(this);\r\n\r\nfunction loadTimeSer&quot;...)" classname="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress" time="30.840" status="1" />
    <testcase name="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress.RavenEtlWithTimeSeries_WhenStoreDocumentAndTimeSeriesInSameSession_ShouldSrcBeAsDest(justForXUint: &quot;A5&quot;, shouldEtlTs: True, collections: [&quot;Users&quot;], script: &quot;\r\nloadToUsers(this);\r\n\r\nfunction loadTimeSer&quot;...)" classname="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress" time="1.120" status="1" />
    <testcase name="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress.RavenEtlWithTimeSeries_WhenStoreDocumentAndTimeSeriesInSameSession_ShouldSrcBeAsDest(justForXUint: &quot;A4&quot;, shouldEtlTs: True, collections: [&quot;Users&quot;], script: &quot;\r\nloadToUsers(this);\r\n\r\nfunction loadTimeSer&quot;...)" classname="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress" time="1.140" status="1" />
    <testcase name="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress.RavenEtlWithTimeSeries_WhenStoreDocumentAndTimeSeriesInSameSession_ShouldSrcBeAsDest(justForXUint: &quot;A1&quot;, shouldEtlTs: True, collections: [&quot;Users&quot;], script: &quot;\r\nloadToUsers(this);\r\n\r\nfunction loadTimeSer&quot;...)" classname="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress" time="1.149" status="1" />
    <testcase name="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress.RavenEtlWithTimeSeries_WhenStoreMultipleTimeSeriesOfDocThatHasEtagOfMultipleBatchAhead(justForXUint: &quot;A1&quot;, collections: [&quot;Users&quot;], script: &quot;\r\nloadToUsers(this);\r\n\r\nfunction loadTimeSer&quot;...)" classname="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress" time="14.974" status="1" />
    <testcase name="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress.RavenEtlWithTimeSeries_WhenStoreDocumentAndTimeSeriesInSameSession_ShouldSrcBeAsDest(justForXUint: &quot;A3&quot;, shouldEtlTs: True, collections: [&quot;Users&quot;], script: &quot;\r\nloadToUsers(this);\r\n\r\nfunction loadTimeSer&quot;...)" classname="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress" time="1.160" status="1" />
    <testcase name="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress.RavenEtlWithTimeSeries_WhenStoreMultipleTimeSeriesOfDocThatHasEtagOfMultipleBatchAhead(justForXUint: &quot;A6&quot;, collections: [&quot;Users&quot;], script: &quot;\r\nloadToUsers(this);\r\n\r\nfunction loadAllTime&quot;...)" classname="StressTests.Server.Documents.ETL.EtlTimeSeriesTestsStress" time="18.216" status="1" />
    <system-out />
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Voron.InvalidReleasesOfScratchPages" hostname="EAGLE-1" package="not available" id="11" tests="1" failures="0" errors="0" skipped="0" time="60.122" timestamp="2022-03-14T08:15:37">
    <properties />
    <testcase name="StressTests.Voron.InvalidReleasesOfScratchPages.ParallelWritesInBatchesAndReadsByUsingTreeIterator" classname="StressTests.Voron.InvalidReleasesOfScratchPages" time="60.122" status="1" />
    <system-out />
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Server.Replication.ExternalReplicationStressTests_NoDispose" hostname="EAGLE-1" package="not available" id="12" tests="1" failures="0" errors="0" skipped="1" time="0.001" timestamp="2022-03-14T08:10:50">
    <properties />
    <testcase name="StressTests.Server.Replication.ExternalReplicationStressTests_NoDispose.ExternalReplicationShouldWorkWithSmallTimeoutStress" classname="StressTests.Server.Replication.ExternalReplicationStressTests_NoDispose" time="0.001">
      <skipped />
      <system-out>Test can be run only on 'All' (AllX64)</system-out>
    </testcase>
    <system-out>Test can be run only on 'All' (AllX64)</system-out>
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Issues.RavenDB_13987" hostname="EAGLE-1" package="not available" id="13" tests="2" failures="0" errors="0" skipped="0" time="124.141" timestamp="2022-03-14T08:14:00">
    <properties />
    <testcase name="StressTests.Issues.RavenDB_13987.ServerWideBackupShouldNotWakeupIdleDatabases" classname="StressTests.Issues.RavenDB_13987" time="42.394" status="1" />
    <testcase name="StressTests.Issues.RavenDB_13987.DatabaseWithBackupTaskShouldNotGetIdleBeforeBackupOccurrence" classname="StressTests.Issues.RavenDB_13987" time="81.746" status="1" />
    <system-out />
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Rachis.SubscriptionFailoverWithWaitingChainsStress" hostname="EAGLE-1" package="not available" id="14" tests="4" failures="0" errors="0" skipped="0" time="1236.190" timestamp="2022-03-14T07:55:23">
    <properties />
    <testcase name="StressTests.Rachis.SubscriptionFailoverWithWaitingChainsStress.SubscriptionsShouldFailoverCorrectrlyAndAllowThemselvesToBeTerminated(subscriptionsChainSize: 3, clusterSize: 5, dBGroupSize: 3, shouldTrapRevivedNodesIntoCandidate: False)" classname="StressTests.Rachis.SubscriptionFailoverWithWaitingChainsStress" time="308.557" status="1" />
    <testcase name="StressTests.Rachis.SubscriptionFailoverWithWaitingChainsStress.SubscriptionsShouldFailoverCorrectrlyAndAllowThemselvesToBeTerminated(subscriptionsChainSize: 2, clusterSize: 5, dBGroupSize: 3, shouldTrapRevivedNodesIntoCandidate: False)" classname="StressTests.Rachis.SubscriptionFailoverWithWaitingChainsStress" time="305.708" status="1" />
    <testcase name="StressTests.Rachis.SubscriptionFailoverWithWaitingChainsStress.SubscriptionsShouldFailoverCorrectrlyAndAllowThemselvesToBeTerminated(subscriptionsChainSize: 2, clusterSize: 3, dBGroupSize: 3, shouldTrapRevivedNodesIntoCandidate: False)" classname="StressTests.Rachis.SubscriptionFailoverWithWaitingChainsStress" time="302.248" status="1" />
    <testcase name="StressTests.Rachis.SubscriptionFailoverWithWaitingChainsStress.SubscriptionsShouldFailoverCorrectrlyAndAllowThemselvesToBeTerminated(subscriptionsChainSize: 3, clusterSize: 5, dBGroupSize: 5, shouldTrapRevivedNodesIntoCandidate: False)" classname="StressTests.Rachis.SubscriptionFailoverWithWaitingChainsStress" time="319.678" status="1" />
    <system-out />
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Issues.RavenDB_15780" hostname="EAGLE-1" package="not available" id="15" tests="4" failures="0" errors="0" skipped="3" time="0.109" timestamp="2022-03-14T08:22:01">
    <properties />
    <testcase name="StressTests.Issues.RavenDB_15780.BloomFilter_Version" classname="StressTests.Issues.RavenDB_15780" time="0.106" status="1" />
    <testcase name="StressTests.Issues.RavenDB_15780.SuccessRate_BloomFilters_2" classname="StressTests.Issues.RavenDB_15780" time="0.001">
      <skipped />
      <system-out>Test can be run only on 'All' (AllX64)</system-out>
    </testcase>
    <testcase name="StressTests.Issues.RavenDB_15780.SuccessRate_BloomFilters_1" classname="StressTests.Issues.RavenDB_15780" time="0.001">
      <skipped />
      <system-out>Test can be run only on 'All' (AllX64)</system-out>
    </testcase>
    <testcase name="StressTests.Issues.RavenDB_15780.SuccessRate_BloomFilters_3" classname="StressTests.Issues.RavenDB_15780" time="0.001">
      <skipped />
      <system-out>Test can be run only on 'All' (AllX64)</system-out>
    </testcase>
    <system-out>Test can be run only on 'All' (AllX64)
Test can be run only on 'All' (AllX64)
Test can be run only on 'All' (AllX64)</system-out>
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Server.Documents.PeriodicBackup.PeriodicBackupTestsStress" hostname="EAGLE-1" package="not available" id="16" tests="2" failures="0" errors="0" skipped="0" time="202.442" timestamp="2022-03-14T08:19:00">
    <properties />
    <testcase name="StressTests.Server.Documents.PeriodicBackup.PeriodicBackupTestsStress.FirstBackupWithClusterDownStatusShouldRearrangeTheTimer" classname="StressTests.Server.Documents.PeriodicBackup.PeriodicBackupTestsStress" time="119.720" status="1" />
    <testcase name="StressTests.Server.Documents.PeriodicBackup.PeriodicBackupTestsStress.ShouldRearrangeTheTimeIfBackupAfterTimerCallbackGotActiveByOtherNode" classname="StressTests.Server.Documents.PeriodicBackup.PeriodicBackupTestsStress" time="82.723" status="1" />
    <system-out />
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Rachis.AddNodeToClusterTests" hostname="EAGLE-1" package="not available" id="17" tests="1" failures="0" errors="0" skipped="1" time="0.001" timestamp="2022-03-14T07:32:06">
    <properties />
    <testcase name="StressTests.Rachis.AddNodeToClusterTests.ReAddMemberNode" classname="StressTests.Rachis.AddNodeToClusterTests" time="0.001">
      <skipped />
      <system-out>Test can be run only on 'All' (AllX64)</system-out>
    </testcase>
    <system-out>Test can be run only on 'All' (AllX64)</system-out>
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Client.Attachments.AttachmentsStreamStressFromSlow" hostname="EAGLE-1" package="not available" id="18" tests="7" failures="0" errors="0" skipped="1" time="13.274" timestamp="2022-03-14T08:28:06">
    <properties />
    <testcase name="StressTests.Client.Attachments.AttachmentsStreamStressFromSlow.CanGetListOfAttachmentsAndReadOrdered(count: 1000, size: 32768)" classname="StressTests.Client.Attachments.AttachmentsStreamStressFromSlow" time="1.828" status="1" />
    <testcase name="StressTests.Client.Attachments.AttachmentsStreamStressFromSlow.CanGetListOfAttachmentsAndSkip(count: 10000, size: 1)" classname="StressTests.Client.Attachments.AttachmentsStreamStressFromSlow" time="3.096" status="1" />
    <testcase name="StressTests.Client.Attachments.AttachmentsStreamStressFromSlow.CanGetListOfAttachmentsAndSkip(count: 1000, size: 32768)" classname="StressTests.Client.Attachments.AttachmentsStreamStressFromSlow" time="1.753" status="1" />
    <testcase name="StressTests.Client.Attachments.AttachmentsStreamStressFromSlow.CanGetListOfAttachmentsAndReadOrderedAsync(count: 10000, size: 1)" classname="StressTests.Client.Attachments.AttachmentsStreamStressFromSlow" time="2.325" status="1" />
    <testcase name="StressTests.Client.Attachments.AttachmentsStreamStressFromSlow.CanGetListOfAttachmentsAndReadOrderedAsync(count: 1000, size: 32768)" classname="StressTests.Client.Attachments.AttachmentsStreamStressFromSlow" time="1.789" status="1" />
    <testcase name="StressTests.Client.Attachments.AttachmentsStreamStressFromSlow.CanGetOneAttachment" classname="StressTests.Client.Attachments.AttachmentsStreamStressFromSlow" time="0.001">
      <skipped />
      <system-out>Test can be run only on 'All' (AllX64)</system-out>
    </testcase>
    <testcase name="StressTests.Client.Attachments.AttachmentsStreamStressFromSlow.CanGetListOfAttachmentsAndReadOrdered(count: 10000, size: 1)" classname="StressTests.Client.Attachments.AttachmentsStreamStressFromSlow" time="2.482" status="1" />
    <system-out>Test can be run only on 'All' (AllX64)</system-out>
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Issues.RavenDB_16934" hostname="EAGLE-1" package="not available" id="19" tests="1" failures="0" errors="0" skipped="1" time="0.001" timestamp="2022-03-14T08:10:50">
    <properties />
    <testcase name="StressTests.Issues.RavenDB_16934.Should_Delete_All_Documents_Without_Timeout" classname="StressTests.Issues.RavenDB_16934" time="0.001">
      <skipped />
      <system-out>Test can be run only on 'All' (AllX64)</system-out>
    </testcase>
    <system-out>Test can be run only on 'All' (AllX64)</system-out>
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Issues.FilteredReplicationTestsStress" hostname="EAGLE-1" package="not available" id="20" tests="2" failures="0" errors="0" skipped="0" time="30.472" timestamp="2022-03-14T07:06:27">
    <properties />
    <testcase name="StressTests.Issues.FilteredReplicationTestsStress.Sinks_should_not_update_hubs_change_vector_with_conflicts" classname="StressTests.Issues.FilteredReplicationTestsStress" time="15.272" status="1" />
    <testcase name="StressTests.Issues.FilteredReplicationTestsStress.Sinks_should_not_update_hubs_change_vector_with_conflicts2" classname="StressTests.Issues.FilteredReplicationTestsStress" time="15.200" status="1" />
    <system-out />
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Client.TimeSeries.TimeSeriesStress" hostname="EAGLE-1" package="not available" id="21" tests="3" failures="0" errors="0" skipped="1" time="406.264" timestamp="2022-03-14T07:29:56">
    <properties />
    <testcase name="StressTests.Client.TimeSeries.TimeSeriesStress.PatchTimestamp_IntegrationTest" classname="StressTests.Client.TimeSeries.TimeSeriesStress" time="296.224" status="1" />
    <testcase name="StressTests.Client.TimeSeries.TimeSeriesStress.ManyTimeSeriesRetention" classname="StressTests.Client.TimeSeries.TimeSeriesStress" time="110.039" status="1" />
    <testcase name="StressTests.Client.TimeSeries.TimeSeriesStress.RapidRetention" classname="StressTests.Client.TimeSeries.TimeSeriesStress" time="0.001">
      <skipped />
      <system-out>Test can be run only on 'All' (AllX64)</system-out>
    </testcase>
    <system-out>Test can be run only on 'All' (AllX64)</system-out>
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Server.Replication.PullReplicationStressTests" hostname="EAGLE-1" package="not available" id="22" tests="1" failures="0" errors="0" skipped="0" time="17.085" timestamp="2022-03-14T07:16:57">
    <properties />
    <testcase name="StressTests.Server.Replication.PullReplicationStressTests.PullExternalReplicationWithCertificateShouldWork" classname="StressTests.Server.Replication.PullReplicationStressTests" time="17.085" status="1" />
    <system-out />
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Voron.LargeFixedSizeTreesStressCases" hostname="EAGLE-1" package="not available" id="23" tests="4" failures="0" errors="0" skipped="1" time="205.071" timestamp="2022-03-14T08:31:07">
    <properties />
    <testcase name="StressTests.Voron.LargeFixedSizeTreesStressCases.CanDeleteRange_TryToFindABranchNextToLeaf(count: 300000, seed: 227928113)" classname="StressTests.Voron.LargeFixedSizeTreesStressCases" time="170.917" status="1" />
    <testcase name="StressTests.Voron.LargeFixedSizeTreesStressCases.CanDeleteRange_RandomRanges" classname="StressTests.Voron.LargeFixedSizeTreesStressCases" time="0.001">
      <skipped />
      <system-out>Test can be run only on 'All' (AllX64)</system-out>
    </testcase>
    <testcase name="StressTests.Voron.LargeFixedSizeTreesStressCases.CanDeleteRange_TryToFindABranchNextToLeaf(count: 94000, seed: 1253511941)" classname="StressTests.Voron.LargeFixedSizeTreesStressCases" time="0.858" status="1" />
    <testcase name="StressTests.Voron.LargeFixedSizeTreesStressCases.CanDeleteRange_RandomRanges_WithGaps(count: 300000, seed: 1349827932)" classname="StressTests.Voron.LargeFixedSizeTreesStressCases" time="33.295" status="1" />
    <system-out>Test can be run only on 'All' (AllX64)</system-out>
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Client.Attachments.AttachmentsStreamStress" hostname="EAGLE-1" package="not available" id="24" tests="2" failures="0" errors="0" skipped="2" time="0.002" timestamp="2022-03-14T08:14:00">
    <properties />
    <testcase name="StressTests.Client.Attachments.AttachmentsStreamStress.CanGetListOfHugeAttachmentsAndReadOrdered" classname="StressTests.Client.Attachments.AttachmentsStreamStress" time="0.001">
      <skipped />
      <system-out>Test can be run only on 'All' (AllX64)</system-out>
    </testcase>
    <testcase name="StressTests.Client.Attachments.AttachmentsStreamStress.CanGetListOfDifferentAttachmentsAndRead" classname="StressTests.Client.Attachments.AttachmentsStreamStress" time="0.001">
      <skipped />
      <system-out>Test can be run only on 'All' (AllX64)</system-out>
    </testcase>
    <system-out>Test can be run only on 'All' (AllX64)
Test can be run only on 'All' (AllX64)</system-out>
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Rachis.DatabaseCluster.ReplicationTestsStress" hostname="EAGLE-1" package="not available" id="25" tests="2" failures="0" errors="0" skipped="0" time="96.217" timestamp="2022-03-14T08:34:58">
    <properties />
    <testcase name="StressTests.Rachis.DatabaseCluster.ReplicationTestsStress.RavenDB_14435" classname="StressTests.Rachis.DatabaseCluster.ReplicationTestsStress" time="75.376" status="1" />
    <testcase name="StressTests.Rachis.DatabaseCluster.ReplicationTestsStress.WaitForReplicationShouldWaitOnlyForInternalNodes" classname="StressTests.Rachis.DatabaseCluster.ReplicationTestsStress" time="20.841" status="1" />
    <system-out />
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Issues.RavenDB_14292" hostname="EAGLE-1" package="not available" id="26" tests="1" failures="0" errors="0" skipped="0" time="70.433" timestamp="2022-03-14T07:08:00">
    <properties />
    <testcase name="StressTests.Issues.RavenDB_14292.ServerWideBackupShouldBackupIdleDatabase(rounds: 1)" classname="StressTests.Issues.RavenDB_14292" time="70.433" status="1" />
    <system-out />
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Voron.PageSplitterStressTests" hostname="EAGLE-1" package="not available" id="27" tests="2" failures="0" errors="0" skipped="0" time="58.309" timestamp="2022-03-14T07:37:03">
    <properties />
    <testcase name="StressTests.Voron.PageSplitterStressTests.PageSplitterShouldCalculateSeparatorKeyCorrectly" classname="StressTests.Voron.PageSplitterStressTests" time="30.510" status="1" />
    <testcase name="StressTests.Voron.PageSplitterStressTests.PageSplitterShouldCalculateSeparatorKeyCorrectly2" classname="StressTests.Voron.PageSplitterStressTests" time="27.800" status="1" />
    <system-out />
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Databases" hostname="EAGLE-1" package="not available" id="28" tests="2" failures="0" errors="0" skipped="1" time="305.765" timestamp="2022-03-14T08:28:02">
    <properties />
    <testcase name="StressTests.Databases.CanHandleMultipleDatabasesOnWrite32" classname="StressTests.Databases" time="305.764" status="1" />
    <testcase name="StressTests.Databases.CanHandleMultipleDatabasesOnWrite" classname="StressTests.Databases" time="0.001">
      <skipped />
      <system-out>Test can be run only on 'All' (AllX64)</system-out>
    </testcase>
    <system-out>Test can be run only on 'All' (AllX64)</system-out>
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Server.Documents.PeriodicBackup.ServerWideBackupStress" hostname="EAGLE-1" package="not available" id="29" tests="2" failures="0" errors="0" skipped="0" time="771.007" timestamp="2022-03-14T07:50:00">
    <properties />
    <testcase name="StressTests.Server.Documents.PeriodicBackup.ServerWideBackupStress.ServerWideBackupShouldBackupIdleDatabaseStress(rounds: 2)" classname="StressTests.Server.Documents.PeriodicBackup.ServerWideBackupStress" time="240.088" status="1" />
    <testcase name="StressTests.Server.Documents.PeriodicBackup.ServerWideBackupStress.ServerWideBackupShouldBackupIdleDatabaseStressNightly(rounds: 5)" classname="StressTests.Server.Documents.PeriodicBackup.ServerWideBackupStress" time="530.918" status="1" />
    <system-out />
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Issues.RavenDB_15145" hostname="EAGLE-1" package="not available" id="30" tests="1" failures="0" errors="0" skipped="0" time="38.309" timestamp="2022-03-14T07:17:36">
    <properties />
    <testcase name="StressTests.Issues.RavenDB_15145.PullReplicationWithoutPrivateKey" classname="StressTests.Issues.RavenDB_15145" time="38.309" status="1" />
    <system-out />
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Issues.RavenDB_5763" hostname="EAGLE-1" package="not available" id="31" tests="1" failures="0" errors="0" skipped="0" time="0.396" timestamp="2022-03-14T08:22:56">
    <properties />
    <testcase name="StressTests.Issues.RavenDB_5763.Should_not_throw_timeout_and_out_of_memory" classname="StressTests.Issues.RavenDB_5763" time="0.396" status="1" />
    <system-out />
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Issues.RavenDB_14464" hostname="EAGLE-1" package="not available" id="32" tests="1" failures="0" errors="0" skipped="0" time="13.505" timestamp="2022-03-14T07:50:13">
    <properties />
    <testcase name="StressTests.Issues.RavenDB_14464.CanUseChangesApiAndToggleServer" classname="StressTests.Issues.RavenDB_14464" time="13.505" status="1" />
    <system-out />
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Issues.RavenDB_13861" hostname="EAGLE-1" package="not available" id="33" tests="4" failures="0" errors="0" skipped="2" time="8.305" timestamp="2022-03-14T07:18:14">
    <properties />
    <testcase name="StressTests.Issues.RavenDB_13861.BatchMemorySizeLimitationShouldBeExactIn64Bit" classname="StressTests.Issues.RavenDB_13861" time="0.001">
      <skipped />
      <system-out>Test can be run only on 'All' (AllX64)</system-out>
    </testcase>
    <testcase name="StressTests.Issues.RavenDB_13861.BatchMemorySizeLimitationShouldBeExactInEncryptedModeIn64Bit" classname="StressTests.Issues.RavenDB_13861" time="0.001">
      <skipped />
      <system-out>Test can be run only on 'All' (AllX64)</system-out>
    </testcase>
    <testcase name="StressTests.Issues.RavenDB_13861.BatchMemorySizeLimitationShouldBeExactInEncryptedModeIn32Bit" classname="StressTests.Issues.RavenDB_13861" time="5.072" status="1" />
    <testcase name="StressTests.Issues.RavenDB_13861.BatchMemorySizeLimitationShouldBeExactIn32Bit" classname="StressTests.Issues.RavenDB_13861" time="3.231" status="1" />
    <system-out>Test can be run only on 'All' (AllX64)
Test can be run only on 'All' (AllX64)</system-out>
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Client.Attachments.AttachmentsHugeFiles" hostname="EAGLE-1" package="not available" id="34" tests="2" failures="0" errors="0" skipped="2" time="0.002" timestamp="2022-03-14T08:28:15">
    <properties />
    <testcase name="StressTests.Client.Attachments.AttachmentsHugeFiles.SupportHugeAttachment" classname="StressTests.Client.Attachments.AttachmentsHugeFiles" time="0.001">
      <skipped />
      <system-out>Test can be run only on 'All' (AllX64)</system-out>
    </testcase>
    <testcase name="StressTests.Client.Attachments.AttachmentsHugeFiles.BatchRequestWithLongMultiPartSections" classname="StressTests.Client.Attachments.AttachmentsHugeFiles" time="0.001">
      <skipped />
      <system-out>Test can be run only on 'All' (AllX64)</system-out>
    </testcase>
    <system-out>Test can be run only on 'All' (AllX64)
Test can be run only on 'All' (AllX64)</system-out>
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Client.StreamingWithTimeout" hostname="EAGLE-1" package="not available" id="35" tests="1" failures="0" errors="0" skipped="0" time="122.322" timestamp="2022-03-14T08:33:43">
    <properties />
    <testcase name="StressTests.Client.StreamingWithTimeout.TimeoutOnHangingStreamQuery" classname="StressTests.Client.StreamingWithTimeout" time="122.322" status="1" />
    <system-out />
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Utils.ChunkedMmapStreamStressTests" hostname="EAGLE-1" package="not available" id="36" tests="1" failures="0" errors="0" skipped="0" time="7.654" timestamp="2022-03-14T07:15:48">
    <properties />
    <testcase name="StressTests.Utils.ChunkedMmapStreamStressTests.Can_seek_and_read_from_chunked_mmap_file(totalSize: 131089, chunkSize: 64, seed: 2120355860)" classname="StressTests.Utils.ChunkedMmapStreamStressTests" time="7.654" status="1" />
    <system-out />
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Voron.Trees.FreeSpaceStressTests" hostname="EAGLE-1" package="not available" id="37" tests="3" failures="0" errors="0" skipped="0" time="6.546" timestamp="2022-03-14T08:10:57">
    <properties />
    <testcase name="StressTests.Voron.Trees.FreeSpaceStressTests.FreeSpaceHandlingShouldNotReturnPagesThatAreAlreadyAllocated(maxPageNumber: -1, numberOfFreedPages: -1, seed: 227928113)" classname="StressTests.Voron.Trees.FreeSpaceStressTests" time="6.374" status="1" />
    <testcase name="StressTests.Voron.Trees.FreeSpaceStressTests.FreeSpaceHandlingShouldNotReturnPagesThatAreAlreadyAllocated(maxPageNumber: 400000, numberOfFreedPages: 60, seed: 1253511941)" classname="StressTests.Voron.Trees.FreeSpaceStressTests" time="0.052" status="1" />
    <testcase name="StressTests.Voron.Trees.FreeSpaceStressTests.FreeSpaceHandlingShouldNotReturnPagesThatAreAlreadyAllocated(maxPageNumber: 400000, numberOfFreedPages: 60, seed: 2)" classname="StressTests.Voron.Trees.FreeSpaceStressTests" time="0.121" status="1" />
    <system-out />
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Issues.RavenDB_17340" hostname="EAGLE-1" package="not available" id="38" tests="3" failures="0" errors="0" skipped="1" time="0.337" timestamp="2022-03-14T08:22:56">
    <properties />
    <testcase name="StressTests.Issues.RavenDB_17340.SendingDocumentWithLargeFieldInBulkInsert_32bit(sizeInMb: 6)" classname="StressTests.Issues.RavenDB_17340" time="0.143" status="1" />
    <testcase name="StressTests.Issues.RavenDB_17340.SendingDocumentWithLargeFieldInBulkInsert_32bit(sizeInMb: 10)" classname="StressTests.Issues.RavenDB_17340" time="0.193" status="1" />
    <testcase name="StressTests.Issues.RavenDB_17340.SendingDocumentWithLargeFieldInBulkInsert" classname="StressTests.Issues.RavenDB_17340" time="0.001">
      <skipped />
      <system-out>Test can be run only on 'All' (AllX64)</system-out>
    </testcase>
    <system-out>Test can be run only on 'All' (AllX64)</system-out>
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Voron.Issues.RavenDB_7667" hostname="EAGLE-1" package="not available" id="39" tests="1" failures="0" errors="0" skipped="0" time="27.286" timestamp="2022-03-14T08:14:37">
    <properties />
    <testcase name="StressTests.Voron.Issues.RavenDB_7667.IndexTreeNeedsToReturnPageToAllocatorInsteadOfFreeSpaceHandling" classname="StressTests.Voron.Issues.RavenDB_7667" time="27.286" status="1" />
    <system-out />
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Voron.Bugs.DataInconsistencyReproStressTests" hostname="EAGLE-1" package="not available" id="40" tests="1" failures="0" errors="0" skipped="0" time="33.082" timestamp="2022-03-14T07:18:09">
    <properties />
    <testcase name="StressTests.Voron.Bugs.DataInconsistencyReproStressTests.FaultyOverflowPagesHandling_CannotModifyReadOnlyPages(initialNumberOfDocs: 1000, numberOfModifications: 50000, seed: 324244104)" classname="StressTests.Voron.Bugs.DataInconsistencyReproStressTests" time="33.082" status="1" />
    <system-out />
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Issues.RavenDB_14744" hostname="EAGLE-1" package="not available" id="41" tests="1" failures="0" errors="0" skipped="0" time="18.960" timestamp="2022-03-14T07:16:40">
    <properties />
    <testcase name="StressTests.Issues.RavenDB_14744.LoadingIdleDatabaseShouldNotMoveToRehab" classname="StressTests.Issues.RavenDB_14744" time="18.960" status="1" />
    <system-out />
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Issues.RavenDB_17296" hostname="EAGLE-1" package="not available" id="42" tests="1" failures="0" errors="0" skipped="1" time="0.001" timestamp="2022-03-14T07:37:03">
    <properties />
    <testcase name="StressTests.Issues.RavenDB_17296.Should_Not_Kill_Server_Because_Of_Insufficient_Execution_Stack" classname="StressTests.Issues.RavenDB_17296" time="0.001">
      <skipped />
      <system-out>Test can be run only on 'Windows' (AllX64)</system-out>
    </testcase>
    <system-out>Test can be run only on 'Windows' (AllX64)</system-out>
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Server.Replication.ExternalReplicationStressTests" hostname="EAGLE-1" package="not available" id="43" tests="3" failures="0" errors="0" skipped="0" time="249.890" timestamp="2022-03-14T07:18:59">
    <properties />
    <testcase name="StressTests.Server.Replication.ExternalReplicationStressTests.CanIdleDatabaseInCluster" classname="StressTests.Server.Replication.ExternalReplicationStressTests" time="41.665" status="1" />
    <testcase name="StressTests.Server.Replication.ExternalReplicationStressTests.ExternalReplicationShouldNotLoadIdleDatabase" classname="StressTests.Server.Replication.ExternalReplicationStressTests" time="64.864" status="1" />
    <testcase name="StressTests.Server.Replication.ExternalReplicationStressTests.TwoWayExternalReplicationShouldNotLoadIdleDatabase" classname="StressTests.Server.Replication.ExternalReplicationStressTests" time="143.361" status="1" />
    <system-out />
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Issues.RavenDB_15608" hostname="EAGLE-1" package="not available" id="44" tests="1" failures="0" errors="0" skipped="0" time="73.895" timestamp="2022-03-14T07:05:53">
    <properties />
    <testcase name="StressTests.Issues.RavenDB_15608.ArtificalDocumentsMatchIndexEntries" classname="StressTests.Issues.RavenDB_15608" time="73.895" status="1" />
    <system-out />
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Rachis.DatabaseCluster.ClusterDatabaseMaintenanceStress" hostname="EAGLE-1" package="not available" id="45" tests="2" failures="0" errors="0" skipped="0" time="54.677" timestamp="2022-03-14T08:22:23">
    <properties />
    <testcase name="StressTests.Rachis.DatabaseCluster.ClusterDatabaseMaintenanceStress.MoveLoadingNodeToLast" classname="StressTests.Rachis.DatabaseCluster.ClusterDatabaseMaintenanceStress" time="22.719" status="1" />
    <testcase name="StressTests.Rachis.DatabaseCluster.ClusterDatabaseMaintenanceStress.MoveLoadingNodeToLastAndRestoreToFixedOrder" classname="StressTests.Rachis.DatabaseCluster.ClusterDatabaseMaintenanceStress" time="31.957" status="1" />
    <system-out />
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Cluster.ClusterIndexNotificationsTestStress" hostname="EAGLE-1" package="not available" id="46" tests="1" failures="0" errors="0" skipped="0" time="19.269" timestamp="2022-03-14T07:06:12">
    <properties />
    <testcase name="StressTests.Cluster.ClusterIndexNotificationsTestStress.ShouldThrowTimeoutException" classname="StressTests.Cluster.ClusterIndexNotificationsTestStress" time="19.269" status="1" />
    <system-out />
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Server.Documents.ETL.Olap.LocalTestsStress" hostname="EAGLE-1" package="not available" id="47" tests="2" failures="0" errors="0" skipped="0" time="152.551" timestamp="2022-03-14T07:25:00">
    <properties />
    <testcase name="StressTests.Server.Documents.ETL.Olap.LocalTestsStress.AfterDatabaseRestartEtlShouldRespectRunFrequency" classname="StressTests.Server.Documents.ETL.Olap.LocalTestsStress" time="119.998" status="1" />
    <testcase name="StressTests.Server.Documents.ETL.Olap.LocalTestsStress.ShouldRespectEtlRunFrequency" classname="StressTests.Server.Documents.ETL.Olap.LocalTestsStress" time="32.553" status="1" />
    <system-out />
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Voron.HugeTransactions" hostname="EAGLE-1" package="not available" id="48" tests="2" failures="0" errors="0" skipped="2" time="0.002" timestamp="2022-03-14T07:18:09">
    <properties />
    <testcase name="StressTests.Voron.HugeTransactions.CanWriteBigTransactions" classname="StressTests.Voron.HugeTransactions" time="0.001">
      <skipped />
      <system-out>Test can be run only on 'All' (AllX64)</system-out>
    </testcase>
    <testcase name="StressTests.Voron.HugeTransactions.LZ4TestAbove2GB" classname="StressTests.Voron.HugeTransactions" time="0.001">
      <skipped />
      <system-out>Test can be run only on 'All' (AllX64)</system-out>
    </testcase>
    <system-out>Test can be run only on 'All' (AllX64)
Test can be run only on 'All' (AllX64)</system-out>
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Cluster.ClusterStressTests" hostname="EAGLE-1" package="not available" id="49" tests="1" failures="0" errors="0" skipped="0" time="59.039" timestamp="2022-03-14T08:11:56">
    <properties />
    <testcase name="StressTests.Cluster.ClusterStressTests.ParallelClusterTransactions" classname="StressTests.Cluster.ClusterStressTests" time="59.039" status="1" />
    <system-out />
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Server.Encryption.EncryptionStressTests" hostname="EAGLE-1" package="not available" id="50" tests="1" failures="0" errors="0" skipped="0" time="9.689" timestamp="2022-03-14T08:14:10">
    <properties />
    <testcase name="StressTests.Server.Encryption.EncryptionStressTests.CanLockMemoryUnderHighContention" classname="StressTests.Server.Encryption.EncryptionStressTests" time="9.689" status="1" />
    <system-out />
    <system-err />
  </testsuite>
  <testsuite name="StressTests.Issues.RavenDB_13528" hostname="EAGLE-1" package="not available" id="51" tests="1" failures="0" errors="0" skipped="1" time="0.001" timestamp="2022-03-14T08:22:01">
    <properties />
    <testcase name="StressTests.Issues.RavenDB_13528.Can_write_more_than_4GB_to_journal_file" classname="StressTests.Issues.RavenDB_13528" time="0.001">
      <skipped />
      <system-out>Test can be run only on 'All' (AllX64)</system-out>
    </testcase>
    <system-out>Test can be run only on 'All' (AllX64)</system-out>
    <system-err />
  </testsuite>
</testsuites>